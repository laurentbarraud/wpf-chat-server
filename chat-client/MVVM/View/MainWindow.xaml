<Window x:Name="MainWindow1" x:Class="chat_client.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:chat_client" xmlns:viewmodel="clr-namespace:chat_client.MVVM.ViewModel"
        mc:Ignorable="d"
        Title="WPF Chat Server" Height="474" Width="816" WindowStartupLocation="CenterScreen" Loaded="MainWindow_Loaded" ResizeMode="CanMinimize">
    <Window.Resources>
        <ImageBrush x:Key="txtUsername_background" ImageSource="/Resources/txtUsername_background.gif" AlignmentX="Left" Stretch="None" />
        <ImageBrush x:Key="txtIPAddress_background" ImageSource="/Resources/txtIPAddress_background.gif" AlignmentX="Left" Stretch="None" />
    </Window.Resources>
    <Window.DataContext>
        <viewmodel:MainViewModel/>
    </Window.DataContext>

    <Grid x:Name="grdMain" Background="{DynamicResource BackgroundBrush}">
            <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <DockPanel x:Name="dpnLeft">
            <TextBox x:Name="txtUsername" Height="25"
                    Foreground="{DynamicResource ForegroundBrush}" 
                    DockPanel.Dock="Top"
                    Text="{Binding Username, UpdateSourceTrigger=PropertyChanged}"
                    TextChanged="OnTextBoxTextChanged"
                    Background="{DynamicResource txtUsername_background}" FontSize="14" PreviewKeyDown="txtUsername_PreviewKeyDown" MaxLines="1" TabIndex="0" MaxLength="50"/>
            <TextBox x:Name="txtIPAddress" Height="25"
                    Foreground="{DynamicResource ForegroundBrush}"
                    DockPanel.Dock="Top"
                    Text="{Binding IPAddressOfServer}"
                    TextChanged="OnTextBoxTextChanged"
                    Background="{DynamicResource txtIPAddress_background}" FontSize="14" MaxLines="1" MaxLength="15" PreviewKeyDown="txtIPAddress_PreviewKeyDown" TabIndex="1"/>
            <Button x:Name="cmdConnectDisconnect" Height="25"
                    Background="{DynamicResource PrimaryBrush}"
                    Foreground="{DynamicResource ForegroundBrush}"
                    DockPanel.Dock="Top"
                    Content="_Connect" Click="cmdConnectDisconnect_Click" TabIndex="-2" IsEnabled="False"/>
            <StackPanel DockPanel.Dock="Top"
                Orientation="Vertical"
                Margin="0,0,0,0" Height="356">

                <ListView x:Name="lstUsersConnected"
                    ItemsSource="{Binding Users}"
                    TabIndex="5"
                    Height="324"
                    Margin="0,0,0,0"
                    Background="{DynamicResource BackgroundBrush}"
                    Foreground="{DynamicResource ForegroundBrush}"
                    BorderBrush="{DynamicResource PrimaryBrush}"
                    BorderThickness="1"
                    SelectionMode="Single">

                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Padding" Value="4" />
                            <Setter Property="Margin" Value="1" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
                                    <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>

                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Username}" />
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <StackPanel x:Name="spnToolbar"
                            Orientation="Horizontal"
                            Height="32"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="0,0,0,0">

                    <!-- Toggle button to switch theme -->
                    <ToggleButton x:Name="ThemeToggle"
                                  Width="60"
                                  Height="32"
                                  VerticalAlignment="Center"
                                  Margin="0,0,10,0"
                                  Checked="ThemeToggle_Checked"
                                  Unchecked="ThemeToggle_Unchecked">
                        <ToggleButton.Template>
                            <ControlTemplate TargetType="ToggleButton">
                                <Grid>
                                    <!-- Rounded background -->
                                    <Border x:Name="SwitchBackground"
                                        CornerRadius="16"
                                        Background="{DynamicResource BackgroundBrush}"
                                        BorderBrush="{DynamicResource PrimaryBrush}"
                                        BorderThickness="1" />

                                    <!-- Thumb with icon -->
                                    <Grid x:Name="ThumbContainer"
                                      Width="28" Height="28"
                                      VerticalAlignment="Center"
                                      Margin="2,2,30,2">
                                        <!-- Default: left -->
                                        <Ellipse Fill="{DynamicResource PrimaryBrush}" />

                                        <Image x:Name="SwitchIcon"
                                           Source="/Resources/sun.png"
                                           Width="18" Height="18"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center" />
                                    </Grid>
                                </Grid>

                                <ControlTemplate.Triggers>
                                    <!-- Checked: move thumb to right + change icon -->
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter TargetName="SwitchIcon" Property="Source" Value="/Resources/moon.png" />
                                        <Setter TargetName="ThumbContainer" Property="Margin" Value="30,2,2,2" />
                                    </Trigger>

                                    <!-- Unchecked: move thumb to left + change icon -->
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter TargetName="SwitchIcon" Property="Source" Value="/Resources/sun.png" />
                                        <Setter TargetName="ThumbContainer" Property="Margin" Value="2,2,30,2" />
                                    </Trigger>

                                    <!-- Hover effect -->
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="SwitchBackground" Property="Background" Value="{DynamicResource PrimaryBrush}" />
                                    </Trigger>

                                    <!-- Disabled state -->
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter TargetName="SwitchBackground" Property="Opacity" Value="0.4" />
                                        <Setter TargetName="ThumbContainer" Property="Opacity" Value="0.4" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </ToggleButton.Template>
                    </ToggleButton>

                    <!-- Button to choose the port that will be used for connection -->
                    <Button x:Name="cmdPortSetting"
                              Width="32"
                              Height="32"
                              Background="Transparent"
                              BorderThickness="0"
                              VerticalAlignment="Center"
                              ToolTip="Configure port settings" 
                              Click="cmdPortSetting_Click">
                        <Image x:Name="imgPortSetting" 
                               Source="/Resources/port-setting.png"
                               Stretch="Uniform"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center" />
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Background" Value="Transparent"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Opacity" Value="0.8"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    
                </StackPanel>
            </StackPanel>
        </DockPanel>

        <StackPanel x:Name="spnCenter" Grid.Column="1" Visibility="Hidden">
            <ListView x:Name="lstMessagesReceived"
                        Height="401"
                        ItemsSource="{Binding Messages}"
                        Background="{DynamicResource BackgroundBrush}"
                        Foreground="{DynamicResource ForegroundBrush}"
                        BorderThickness="0"
                        Margin="0,0,0,0">

                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
                        <Setter Property="Padding" Value="4" />
                        <Setter Property="Margin" Value="1" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListView.ItemContainerStyle>

                <ListView.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}"
                                   TextWrapping="Wrap" />
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <StackPanel x:Name="spnDown" Orientation="Horizontal">
                <TextBox x:Name="txtMessageToSend" Height="32"
                         Width="545"
                         Background="{DynamicResource BackgroundBrush}"
                         Foreground="{DynamicResource ForegroundBrush}"
                         VerticalContentAlignment="Center"
                         Text="{Binding Message, UpdateSourceTrigger=PropertyChanged}" TextChanged="txtMessageToSend_TextChanged" MaxLines="5" TextWrapping="Wrap" MaxLength="500" PreviewKeyDown="txtMessageToSend_PreviewKeyDown" TabIndex="3"/>
                <Button x:Name="cmdSend"
                        Height="32"
                        Width="48"
                        Click="cmdSend_Click"
                        IsEnabled="False"
                        Background="{DynamicResource PrimaryBrush}"
                        Foreground="{DynamicResource ForegroundBrush}">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
                                            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
                                            <Setter Property="Opacity" Value="0.6" />
                                        </Trigger>
                                    </Style.Triggers>
                            </Style>
                        </Button.Style>
                    <Image Source="/Resources/send.png" Stretch="Uniform"/>
                </Button>
            </StackPanel>
        </StackPanel>

        <!-- Popup to choose port number -->
        <Popup x:Name="popupPort"
               PlacementTarget="{Binding ElementName=cmdPortSetting}"
               Placement="Top"
               HorizontalOffset="-40"
               StaysOpen="False"
               AllowsTransparency="True"
               PopupAnimation="Slide"
               Width="180"
               Height="80">

            <Border Background="{DynamicResource BackgroundBrush}"
                    CornerRadius="6"
                    Padding="10"
                    BorderThickness="1"
                    BorderBrush="{DynamicResource AccentBrush}">
                <StackPanel>
                    <TextBlock Text="Use TCP port number:"
                       Foreground="{DynamicResource ForegroundBrush}"
                       FontWeight="SemiBold"
                       FontSize="12"
                       Margin="0,0,0,6" />

                    <DockPanel LastChildFill="False" VerticalAlignment="Center">
                        <!-- Port input textbox -->
                        <TextBox x:Name="txtPortPopup"
                                 Width="80"
                                 Height="24"
                                 VerticalContentAlignment="Center"
                                 HorizontalContentAlignment="Center"
                                 Foreground="{DynamicResource ForegroundBrush}"
                                 Background="{DynamicResource BackgroundBrush}"
                                 KeyDown="txtPortPopup_KeyDown"
                                 DockPanel.Dock="Left" />

                        <!-- Port validation button -->
                        <Button x:Name="cmdValidatePort"
                                Width="24"
                                Height="24"
                                Margin="4,0,0,0"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="1"
                            ToolTip="Validate port"
                            Click="cmdValidatePort_Click"
                            DockPanel.Dock="Left">
                            <Image Source="/Resources/validate.png"
                                   Stretch="Uniform"
                                   Width="14" Height="14"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center" />
                        </Button>

                        <!-- Port status indicator (green or red dot) -->
                        <Image x:Name="imgPortStatus"
                               Width="16"
                               Height="16"
                               Margin="4,0,0,0" 
                               Visibility="Collapsed"
                               VerticalAlignment="Center"
                               DockPanel.Dock="Left"
                               ToolTip="Port scan result" />
                    </DockPanel>

                </StackPanel>
            </Border>
        </Popup>

    </Grid>
</Window>
