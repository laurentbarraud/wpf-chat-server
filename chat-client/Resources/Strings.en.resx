<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About this software</value>
  </data>
  <data name="AppLanguageLabel" xml:space="preserve">
    <value>App language</value>
  </data>
  <data name="ChooseAnAppropriatePortNumber" xml:space="preserve">
    <value>Please choose a number between 1000 and 65535.</value>
  </data>
  <data name="ClientSocketNotConnected" xml:space="preserve">
    <value>Client socket is not connected.</value>
  </data>
  <data name="Connect" xml:space="preserve">
    <value>Connect</value>
  </data>
  <data name="Connected" xml:space="preserve">
    <value>Connected</value>
  </data>
  <data name="ConnectionFailed" xml:space="preserve">
    <value>Connection failed.</value>
  </data>
  <data name="DecryptionFailed" xml:space="preserve">
    <value>[Decryption failed]</value>
  </data>
  <data name="Disconnect" xml:space="preserve">
    <value>Disconnect</value>
  </data>
  <data name="DisconnectError" xml:space="preserve">
    <value>Disconnect error</value>
  </data>
  <data name="EncryptionEnabled" xml:space="preserve">
    <value>Message encryption is enabled.</value>
  </data>
  <data name="EncryptionRequiresConnection" xml:space="preserve">
    <value>You must be connected to the server to enable encryption.</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ErrorInActivatingEncryption" xml:space="preserve">
    <value>Encryption could not be activated.</value>
  </data>
  <data name="ErrorLoadingThemeResources" xml:space="preserve">
    <value>An error occurred while loading settings. Please check your theme resources.</value>
  </data>
  <data name="ErrorWhileDisconnecting" xml:space="preserve">
    <value>Error while disconnecting : </value>
  </data>
  <data name="HasConnected" xml:space="preserve">
    <value>has connected</value>
  </data>
  <data name="HasDisconnected" xml:space="preserve">
    <value>has disconnected</value>
  </data>
  <data name="InvalidPublicKey" xml:space="preserve">
    <value>Invalid public key. Encryption was not enabled.</value>
  </data>
  <data name="IPAddressInvalid" xml:space="preserve">
    <value>The IP address is incorrect. Leave it blank to connect locally.</value>
  </data>
  <data name="LicenceFinal" xml:space="preserve">
    <value> v1.0 - october 2025 - Laurent Barraud </value>
  </data>
  <data name="LicenceInfo1" xml:space="preserve">
    <value>This software is provided "as is", without any kind of warranty.</value>
  </data>
  <data name="LicenceInfo2" xml:space="preserve">
    <value>In no event shall the author be liable for any indirect, incidental\nor consequential damages, including loss of data, lost profits, or business interruption\nwith the use of this software.</value>
  </data>
  <data name="LicenceInfoResources" xml:space="preserve">
    <value>Button images inspired by resources available on Flaticon.com.</value>
  </data>
  <data name="PortNumberInvalid" xml:space="preserve">
    <value>Port number is not valid.</value>
  </data>
  <data name="PortNumberValid" xml:space="preserve">
    <value>Port number is valid.</value>
  </data>
  <data name="PublicKeyRejected" xml:space="preserve">
    <value>The public key was rejected by the server. Encryption was not enabled.</value>
  </data>
  <data name="ReduceToTrayLabel" xml:space="preserve">
    <value>Reduce in system tray</value>
  </data>
  <data name="SendingClientsPublicRSAKeyToTheServerFailed" xml:space="preserve">
    <value>Failed to send the public RSA key to the server. Please check your connection.</value>
  </data>
  <data name="ServerHasClosed" xml:space="preserve">
    <value>Server has closed. You will be disconnected shortly...</value>
  </data>
  <data name="ServerUnreachable" xml:space="preserve">
    <value>The server is unreachable or has refused the connection.</value>
  </data>
  <data name="TrayOpen" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="TrayQuit" xml:space="preserve">
    <value>Quit</value>
  </data>
  <data name="UseCustomPortLabel" xml:space="preserve">
    <value>Use custom TCP port</value>
  </data>
  <data name="UseEncryptionLabel" xml:space="preserve">
    <value>Use encryption for messages</value>
  </data>
  <data name="GettingMissingKeys" xml:space="preserve">
    <value>Getting missing keys...</value>
  </data>
  <data name="SendingPublicKey" xml:space="preserve">
    <value>Sending public key...</value>
  </data>
  <data name="ScrollLeft" xml:space="preserve">
    <value>Scroll left</value>
  </data>
  <data name="ScrollRight" xml:space="preserve">
    <value>Scroll right</value>
  </data>
  <data name="CliOptionsHelpTitle" xml:space="preserve">
    <value>Command Line Help</value>
  </data>
  <data name="CliOptionsHelpText" xml:space="preserve">
    <value>Usage: chat-client.exe [options]

Options:
  -u, --username, -user &lt;name&gt;   Sets your username and auto-connects to localhost
  -p, --port &lt;number&gt;   Sets the server port (default: 7123)
  -t, --theme &lt;light|dark&gt;   Sets the UI theme
      --dark   Shortcut for dark theme
      --light   Shortcut for light theme
  -l, --language, --lang &lt;en|fr&gt;   Sets the UI language
      --en --english --anglais Shortcut for English
      --fr  --french --francais --français Shortcut for French
  -e, --encrypted   Enables end-to-end encryption
  -r, -m, --reduceintray, --reduce,
      --tray, --systemtray, --min, 
      --minimized   Minimizes to system tray on startup
  -d, --debug   Opens debug console at startup
  -h, -?, --help   Displays this help message
  --about   Opens the About window

All command-line arguments support Windows-style (/option)
and Unix-style (--option) notation.

Example:
  chat-client.exe --dark --french /e /r /u Laurent
</value>
  </data>
  <data name="CommandLineArguments" xml:space="preserve">
    <value>Command-line arguments</value>
  </data>
  <data name="MessageSendingFailed" xml:space="preserve">
    <value>[Error : Your message failed to send.]</value>
  </data>
  <data name="SendingFailed" xml:space="preserve">
    <value>Failed to send message.</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
</root>